<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Roopesh V S</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Roopesh V S</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 01 Mar 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Automatically Scaling Down Lambda Provisioned Concurrency</title>
      <link>http://localhost:1313/automatically-scaling-down-provisioned-concurrency/</link>
      <pubDate>Fri, 01 Mar 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/automatically-scaling-down-provisioned-concurrency/</guid>
      <description>If you are using AWS Lambda to serve real-time traffic and your Lambda initialization times are high, minimizing response time becomes crucial. One option to achieve this is by utilizing provisioned concurrency. Provisioned Concurrency refers to the number of pre-initialized execution environments allocated to your Lambda function.&#xA;Maintaining a constant provisioned concurrency capacity of 200 for a 512 MB Lambda for a month can cost approximately $1,116 USD! This cost is in addition to the pricing for requests and duration.</description>
    </item>
    <item>
      <title>About Roopesh</title>
      <link>http://localhost:1313/about/</link>
      <pubDate>Mon, 12 Sep 2022 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/about/</guid>
      <description>I am a software engineer, currently working at GGWP, involved with handling infrastructure for products that see over a million requests in a day. Before joining GGWP, I spent 2 years at Presidio, where I closely worked with multiple organisations to help them make their applications and operations move to cloud platforms.&#xA;Occasionally, I try to capture interesting bits and pieces from my day-to-day in my blog here.</description>
    </item>
    <item>
      <title>How Sherlock knows if you are on Facebook</title>
      <link>http://localhost:1313/sherlock-facebook/</link>
      <pubDate>Mon, 12 Sep 2022 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/sherlock-facebook/</guid>
      <description>Sherlock is a CLI tool that can be used to find usernames across many social networks. In this post, I share how Sherlock was able to overcome a couple of hurdles in reliably finding if a username existed on Facebook. Sherlock works by having a JSON file as the source where a large collection of sites are listed with a few attributes.&#xA;A sample entry from the file looks like this:</description>
    </item>
  </channel>
</rss>
